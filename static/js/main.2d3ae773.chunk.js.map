{"version":3,"sources":["Intro.tsx","components/Loading.tsx","lightenDarkenColor.ts","Faq.tsx","config.ts","Query.tsx","components/OctocatCorner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Intro","history","useHistory","useState","sentence","setSentence","className","onSubmit","evt","preventDefault","trim","push","encodeURIComponent","required","type","value","onChange","target","to","Loading","lightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","Faq","rel","href","API_HOST","process","normBias","bias","Math","min","abs","biasColor","token","baseColor","isMaleBias","isUnbiased","parts","every","part","skip","biasText","gender","norm","amount","Query","query","URLSearchParams","useLocation","search","get","useGet","path","data","error","loading","message","results","map","result","i","classNames","style","width","background","OctocatCorner","aria-label","height","viewBox","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","fetch"],"mappings":"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","file":"static/js/main.2d3ae773.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Intro.css';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Intro = () => {\n  const history = useHistory();\n  const [sentence, setSentence] = useState('');\n  return (\n    <div className=\"Intro\">\n      <header className=\"Intro-header\">Word2Vec Gender Bias Explorer</header>\n      <p className=\"Intro-subheader\">\n        Enter a word or sentence below to view the gender bias in each word\n      </p>\n      <form\n        className=\"Intro-searchForm\"\n        onSubmit={evt => {\n          evt.preventDefault();\n          if (sentence.trim() !== '') {\n            history.push(`/query?sentence=${encodeURIComponent(sentence)}`);\n          }\n        }}\n      >\n        <div className=\"Intro-searchFormInner\">\n          <input\n            className=\"Intro-search\"\n            required\n            type=\"text\"\n            value={sentence}\n            onChange={evt => setSentence(evt.target.value)}\n          />\n          <button className=\"Intro-go\">Go</button>\n        </div>\n      </form>\n      <p className=\"Intro-inspiration\">\n        Need some inspiration? Try these:\n        <br />\n        <Link to=\"/query?sentence=The librarian punched the firefighter\">\n          The librarian punched the firefighter\n        </Link>\n        <br />\n        <Link to=\"/query?sentence=She plays tennis, football, and baseball\">\n          She plays tennis, football, and baseball\n        </Link>\n        <br />\n        <Link to=\"/query?sentence=Don't be bossy, be aggressive\">\n          Don't be bossy, be aggressive\n        </Link>\n        <br />\n        <Link to=\"/query?sentence=The hero saved everyone using science\">\n          The hero saved everyone using science\n        </Link>\n        <br />\n        <Link to=\"/query?sentence=bass, drums, guitar, harmonica, saxophone, banjo, piano, harp, cello, violin, flute\">\n          bass, drums, guitar, harmonica, saxophone, banjo, piano, harp, cello,\n          violin, flute\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Intro;\n","import React from 'react';\n\nimport './Loading.css';\n\nconst Loading = () => <div className=\"Loading\">â—‘</div>;\n\nexport default Loading;\n","/**\n *  helper to tweak css color values, from https://css-tricks.com/snippets/javascript/lighten-darken-color\n * @param col the color as a string\n * @param amt amount to change the color, from -255 to 255\n */\nconst lightenDarkenColor = (col: string, amt: number) => {\n  var usePound = false;\n\n  if (col[0] === '#') {\n    col = col.slice(1);\n    usePound = true;\n  }\n\n  var num = parseInt(col, 16);\n\n  var r = (num >> 16) + amt;\n\n  if (r > 255) r = 255;\n  else if (r < 0) r = 0;\n\n  var b = ((num >> 8) & 0x00ff) + amt;\n\n  if (b > 255) b = 255;\n  else if (b < 0) b = 0;\n\n  var g = (num & 0x0000ff) + amt;\n\n  if (g > 255) g = 255;\n  else if (g < 0) g = 0;\n\n  return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\n};\n\nexport default lightenDarkenColor;\n","import React, { FC } from 'react';\nimport './Faq.css';\n\nconst Faq: FC = () => (\n  <div className=\"Faq\">\n    <h4 className=\"Faq-title\">How does this work?</h4>\n    <p className=\"Faq-description\">\n      This tool is based on the paper{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://proceedings.neurips.cc/paper/2016/file/a486cd07e4ac3d270571622f4f316ec5-Paper.pdf\"\n      >\n        Man is to Computer Programmer as Woman is to Homemaker? Debiasing Word\n        Embeddings\n      </a>\n      , and uses pretrained word embeddings from the{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://code.google.com/archive/p/word2vec/\"\n      >\n        Google News word2vec dataset\n      </a>\n      . It works by looking at differences between male and female word pairs\n      like \"he\" and \"she\", or \"boy\" and \"girl\", and then comparing the\n      differences between those words to other word vectors in the word2vec\n      dataset.\n    </p>\n\n    <h4 className=\"Faq-title\">This code is all wrong!</h4>\n    <p className=\"Faq-description\">\n      If you think there's a mistake in the way this is coded, or if you have\n      ideas for improvement or want to collaborate, please open an issue or make\n      a pull request on the{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://github.com/chanind/word2vec-gender-bias-explorer\"\n      >\n        Github repo\n      </a>\n      . Contributions are very welcome :)\n    </p>\n  </div>\n);\n\nexport default Faq;\n","export const API_HOST =\n  process.env.REACT_APP_API_HOST || 'http://localhost:5000';\n","import React, { useState } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useGet } from 'restful-react';\nimport classNames from 'classnames';\n\nimport Loading from './components/Loading';\nimport './Query.css';\nimport lightenDarkenColor from './lightenDarkenColor';\nimport Faq from './Faq';\nimport { API_HOST } from './config';\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\ninterface TokenPart {\n  whitespace: string;\n  pos: string;\n  dep: string;\n  ent: string;\n  skip: boolean;\n}\n\ninterface Token {\n  token: string;\n  bias: number;\n  parts: TokenPart[];\n}\n\ninterface ApiResults {\n  results: Token[];\n}\n\nconst MAX_BIAS = 0.7;\n\nconst normBias = (bias: number): number =>\n  Math.min(Math.abs(bias), MAX_BIAS) / MAX_BIAS;\n\nconst biasWidth = (token: Token): string => `${50 * normBias(token.bias)}%`;\n\nconst biasColor = (token: Token): string => {\n  const baseColor = isMaleBias(token) ? '#3F8EAA' : '#AA3F8E';\n  return lightenDarkenColor(baseColor, (1 - normBias(token.bias)) * 120);\n};\n\nconst isUnbiased = (token: Token) => {\n  if (token.parts.every(part => part.skip)) {\n    return true;\n  }\n  return token.bias <= 0 && token.bias > -0.2;\n};\n\nconst isMaleBias = (token: Token) => !isUnbiased(token) && token.bias > 0;\n\nconst biasText = (token: Token): string => {\n  if (isUnbiased(token)) return 'unbiased';\n  const gender = isMaleBias(token) ? 'male' : 'female';\n  const norm = normBias(token.bias);\n  let amount = 'slight';\n  if (norm > 0.3) amount = 'moderate';\n  if (norm > 0.6) amount = 'strong';\n  return `${amount} ${gender} bias`;\n};\n\nconst Query = () => {\n  const query = useQuery();\n  const history = useHistory();\n  const [sentence, setSentence] = useState(query.get('sentence') || '');\n  const { data, error, loading } = useGet<ApiResults>({\n    path: `${API_HOST}/detect?sentence=${encodeURIComponent(\n      query.get('sentence') ?? '',\n    )}`,\n  });\n  return (\n    <div className=\"Query\">\n      <header className=\"Query-header\">\n        <Link to=\"/\">Word2Vec Gender Bias Explorer</Link>\n      </header>\n      <form\n        className=\"Query-searchBox\"\n        onSubmit={evt => {\n          evt.preventDefault();\n          if (sentence.trim() !== '') {\n            history.push(`/query?sentence=${encodeURIComponent(sentence)}`);\n          }\n        }}\n      >\n        <input\n          className=\"Query-search\"\n          type=\"text\"\n          value={sentence}\n          onChange={evt => setSentence(evt.target.value)}\n        />\n        <button className=\"Query-searchButton\">Update</button>\n      </form>\n      {loading && <Loading />}\n      {error && (\n        <div className=\"Query-error\">\n          <div className=\"Query-errorInner\">{error.message}</div>\n        </div>\n      )}\n      <div className=\"Query-results\">\n        {data?.results.map((result, i) => (\n          <div\n            key={i}\n            className={classNames('Query-result', {\n              'is-maleBias': isMaleBias(result),\n              'is-femaleBias': !isMaleBias(result),\n              'is-unbiased': isUnbiased(result),\n            })}\n          >\n            <div>{result.token}</div>\n            <div\n              className=\"Query-resultBias\"\n              style={{\n                width: biasWidth(result),\n                background: biasColor(result),\n              }}\n            >\n              <div\n                className=\"Query-resultBiasPointer\"\n                style={{\n                  [isMaleBias(result)\n                    ? 'borderRightColor'\n                    : 'borderLeftColor']: biasColor(result),\n                }}\n              />\n            </div>\n            <div className=\"Query-resultBiasText\">{biasText(result)}</div>\n          </div>\n        ))}\n      </div>\n      <div className=\"Query-faqContainer\">\n        <Faq />\n      </div>\n    </div>\n  );\n};\n\nexport default Query;\n","import React from 'react';\nimport './OctocatCorner.css';\n\n// from https://tholman.com/github-corners/\nconst OctocatCorner = () => (\n  <a\n    href=\"https://github.com/chanind/word2vec-gender-bias-explorer\"\n    className=\"OctocatCorner\"\n    aria-label=\"View source on GitHub\"\n  >\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: '#fff',\n        color: '#282c34',\n        position: 'absolute',\n        top: 0,\n        border: 0,\n        right: 0,\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"OctocatCorner-arm\"\n      ></path>\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"OctocatCorner-body\"\n      ></path>\n    </svg>\n  </a>\n);\n\nexport default OctocatCorner;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Intro from './Intro';\nimport Query from './Query';\nimport OctocatCorner from './components/OctocatCorner';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <OctocatCorner />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Intro />\n          </Route>\n          <Route exact path=\"/query\">\n            <Query />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { API_HOST } from './config';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// do a fetch to the base API url to wake up the server, as it can take a few seconds to start cold\nfetch(API_HOST);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}